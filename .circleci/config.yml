version: 2.1
jobs:
  install-lint-test:
    # install and lint is taken as one job to remove required time for downloading cache
    docker:
      - image: circleci/node:11.14.0
    working_directory: /home/circleci/app

    steps:
      # Download and cache dependencies
      - checkout
      # Installation
      - run: yarn --frozen-lockfile
      # Confirm Artifact Version
      - run: yarn contract-artifacts:check
      # Linting
      - run: yarn lint
      # Unit Tests
      - run: yarn test:browser && yarn test:node

      - save_cache:
          paths:
            - node_modules
            - app/lib/contracts
            - /home/circleci/.cache/Cypress
          key: v21-deps-{{ checksum "package.json" }}

  build-docker-test-e2e:
    docker:
      - image: circleci/node:11.14.0-browsers
    working_directory: /home/circleci/app
    resource_class: large
    parallelism: 4

    steps:
      - checkout
      - restore_cache:
          keys:
            - v21-deps-{{ checksum "package.json" }}
            - v21-deps-

      - run: yarn --frozen-lockfile
      - run:
          command: yarn build:prod:e2e:io
          no_output_timeout: 10m
      - run:
          command: yarn test:e2e:chrome

  build-frontend:
    docker:
      - image: circleci/node:11.14.0-browsers
    working_directory: /home/circleci/app

    steps:
      - checkout
      - restore_cache:
          keys:
            - v21-deps-{{ checksum "package.json" }}
            - v21-deps-

      - run: yarn --frozen-lockfile
      - run:
          command: yarn build:prod:e2e
          no_output_timeout: 10m
      # If build takes more than 10mins then fail
      - persist_to_workspace:
          root: /home/circleci/app
          paths:
            - ./

  test-e2e:
    machine:
      enabled: true
      image: ubuntu-1604:201903-01
      docker_layer_caching: true

    environment:
      COMPOSE_INTERACTIVE_NO_CLI: 1

    parallelism: 4

    working_directory: /home/circleci/app

    steps:
      - attach_workspace:
          at: /home/circleci/app
      - checkout
      - run: ./.circleci/install-yarn.sh
      - restore_cache:
          keys:
            - v21-deps-{{ checksum "package.json" }}
            - v21-deps-

      - run:
          command: source   /opt/circleci/.nvm/nvm.sh && yarn test:e2e
          no_output_timeout: 30m

  codechecks:
    docker:
      - image: circleci/node:11.14.0
    working_directory: /home/circleci/app

    steps:
      - checkout
      - restore_cache:
          keys:
            - v21-deps-{{ checksum "package.json" }}
            - v21-deps-

      - run: yarn --frozen-lockfile
      - run: yarn build:commit-deployment
      - run: yarn codechecks

  codechecks-vis-reg:
    docker:
      - image: circleci/node:11.14.0-browsers
    working_directory: /home/circleci/app

    steps:
      - checkout
      - restore_cache:
          keys:
            - v21-deps-{{ checksum "package.json" }}
            - v21-deps-

      - run: yarn --frozen-lockfile
      - run: yarn storybook:screenshots
      - run: yarn codechecks ./codechecks-vis-reg.ts

  deploy-storybook:
    docker:
      - image: circleci/node:11.14.0
    working_directory: /home/circleci/app

    steps:
      - checkout
      - restore_cache:
          keys:
            - v21-deps-{{ checksum "package.json" }}
            - v21-deps-

      - run: yarn --frozen-lockfile
      - run: yarn deploy-storybook --ci --host-token-env-variable=DANGER_GITHUB_API_TOKEN

workflows:
  version: 2

  mainflow:
    jobs:
      - install-lint-test
      - build-docker-test-e2e:
          requires:
            - install-lint-test
      - build-frontend:
          requires:
            - install-lint-test
      - test-e2e:
          requires:
            - build-frontend
            - build-docker-test-e2e
      - codechecks:
          requires:
            - build-frontend
            - build-docker-test-e2e
      - codechecks-vis-reg:
          requires:
            - build-frontend
            - build-docker-test-e2e

  nightly:
    triggers:
      - schedule:
          cron: "0 5 * * *"
          filters:
            branches:
              only:
                - master
                - production
    jobs:
      - install-lint-test
      - build-docker-test-e2e:
          requires:
            - install-lint-test
      - build-frontend:
          requires:
            - install-lint-test
      - test-e2e:
          requires:
            - build-frontend
            - build-docker-test-e2e
      - codechecks:
          requires:
            - build-frontend
      - codechecks-vis-reg:
          requires:
            - build-frontend

  deploy-storybook:
    jobs:
      - deploy-storybook:
          filters:
            branches:
              only: master
